function OnlyTime(separator){if(separator&&String(separator).length>1||!isNaN(separator)){throw new Error("only-time: Invalid separator - has to be one character and cannot be a digit.")}this.separator=separator?separator:":"}OnlyTime.prototype.format=function(int){var n=String(int);if(int===0){n="00"}else if(int<10){n=String.prototype.concat(0,int)}return n};OnlyTime.prototype.toMinutes=function(time){this.checkTimeMinutes(time);var t=time.split(this.separator);return Number(t[0])*60+Number(t[1])};OnlyTime.prototype.toSeconds=function(time){this.checkTimeSeconds(time);var t=time.split(this.separator);return Number(t[0])*3600+Number(t[1])*60+Number(t[2])};OnlyTime.prototype.fromMinutes=function(minutes){this.checkMinutes(minutes);var modulo=minutes%60;return String.prototype.concat(this.format((minutes-modulo)/60),this.separator,this.format(modulo))};OnlyTime.prototype.fromSeconds=function(seconds){this.checkSeconds(seconds);var modulo=seconds%60;return String.prototype.concat(this.fromMinutes((seconds-modulo)/60),this.separator,this.format(modulo))};OnlyTime.prototype.checkMinutes=function(minutes){if(minutes<0||minutes>1440){throw new Error("only-time: Wrong number of minutes: "+minutes+". Should be in the range [0, 1440].")}};OnlyTime.prototype.checkSeconds=function(seconds){if(seconds<0||seconds>86400){throw new Error("only-time: Wrong number of seconds: "+seconds+". Should be in the range [0, 86400].")}};OnlyTime.prototype.checkTimeMinutes=function(time){this.minutesTest=this.minutesTest?this.minutesTest:new RegExp(String.prototype.concat("([01]\\d|2[0-3])\\",this.separator,"([0-5]\\d)"));if(!this.minutesTest.exec(time)){throw new Error('only-time: Invalid time: "'+time+'".')}};OnlyTime.prototype.checkTimeSeconds=function(time){this.secondsTest=this.secondsTest?this.secondsTest:new RegExp(String.prototype.concat("([01]\\d|2[0-3])\\",this.separator,"([0-5]\\d)\\",this.separator,"([0-5]\\d)"));if(!this.secondsTest.exec(time)){throw new Error('only-time: Invalid time with seconds: "'+time+'".')}};OnlyTime.prototype.toTime=OnlyTime.prototype.fromMinutes;
